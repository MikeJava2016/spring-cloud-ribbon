# 本地服务访问，注：当前网关服务IP，做为代理路由IP提供给第三方请求。
# 请求方式：http://gateway_server_ip:8771/path
# 请求流程：外部服务---请求---》网关服务---转发---》后台服务
server:
  # 服务端口
  port: 8771
  # 服务IP
  address: 0.0.0.0

spring:
  application:
    # 应用服务名
    name: dynamic-gateway
  profiles:
    active: cloud,db
  main:
    allow-bean-definition-overriding: true

# 启用服务健康检测，注册中心将通过http://host:port/actuator/health 检测服务的存活，默认10s一次
# 查看网关的路由：http://localhost:8888/actuator/gateway/routes
management:
  endpoints:
    web:
      exposure:
        include:
        # 开放所有端点health，info，metrics，通过actuator/+端点名就可以获取相应的信息。开发用*，上生产请取消。默认打开health和info
        - "*"
  health:
    # 开启后打印详细信息
    show-details: always
    refresh:
      enabled: true

# 配置日志
logging:
  level:
    # log 级别
    org.springframework.cloud.gateway: debug

# 熔断器配置，参见官方：https://github.com/Netflix/Hystrix/wiki/Configuration
hystrix:
  command:
    default:
      circuitBreaker:
        # 用于跟踪运行状况以及重试机制，默认为true
        enabled: true
        # 熔断后拒绝所有请求的时间，之后再次重试请求，默认为5000
        sleepWindowInMilliseconds: 300000
      execution:
        timeout:
          # enabled表示是否启用超时检测，默认为true
          enabled: true
        isolation:
          thread:
            # 全局熔断器超时
            timeoutInMilliseconds: 5000
    # myHystrix为自定义熔断器名称，对应：filters.args.name
    myHystrix:
      execution:
        timeout:
          # enabled表示是否启用超时检测，默认为true
          enabled: true
        isolation:
          thread:
            # 特定服务熔断器超时
            timeoutInMilliseconds: 2000


eureka:
  client:
    service-url:
      defaultZone:  http://192.168.56.100:8761/eureka/
  instance:
    prefer-ip-address: true
    instance-id:  ${spring.cloud.client.ip-address}:${server.port}
