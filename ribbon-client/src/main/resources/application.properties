spring-cloud-order-service.ribbon.listOfServers=\
  http://localhost:8080
spring-cloud-user-service.ribbon.listOfServers=\
  http://localhost:8080

sunshine.a1=true

logging.level.com=info
Level.DEBUG=true
spring-cloud-order-service.ribbon.NFLoadBalancerPingClassName=com.sunshine.configuration.rest.RestTemplateAutoConfiguration.MyPing
spring-cloud-user-service.ribbon.NFLoadBalancerPingClassName=com.sunshine.configuration.rest.RestTemplateAutoConfiguration.MyPing
ribbon.okhttp.enabled=true
ribbon.http.client.enabled=false

eureka.user.name=root
eureka.password.name=root
eureka.client.service-url.defautlZone=http://${eureka.user.name}:${eureka.password.name}@localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
#作用：在EurekaServer管控台可以看到服务实例的ip:port
eureka.instance.instance-id=${spring.cloud.client.ip-address}:${server.port}

## dashboard http://localhost:18080/#/dashboard/metric/sentinel-dashboard
### java -Dserver.port=18080 -Dcsp.sentinel.dashboard.server=localhost:18080 -Dproject.name=sentinel-dashboard -jar sentinel-dashboard.jar
# sentinel dashboard
spring.cloud.sentinel.datasource.ds.apollo.ruleType=flow
spring.cloud.sentinel.transport.dashboard=localhost:18080
# sentinel datasource apollo
spring.cloud.sentinel.datasource.ds.apollo.namespaceName=sentinel
spring.cloud.sentinel.datasource.ds.apollo.flowRulesKey=sentinel.flowRules
spring.cloud.sentinel.datasource.ds.apollo.rule-type=flow

# 激活Sentinel对Feign的支持
feign.sentinel.enabled=true