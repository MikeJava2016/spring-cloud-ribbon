-- ######### 此为演示数据脚本 ##########
-- ######### 用于snapshot-nacos.v.3.2版本

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`gateway` /*!40100 DEFAULT CHARACTER SET utf8mb4 */;

/*Data for the table `apidoc` */

insert  into `apidoc`(`id`,`content`) values ('1',' ##### 内网API接口说明\n接口  | 项目 | 负责人 | 说明\n---|---|---|---\n无| 无 | 无| 无\n'),('3',' ##### 内网API接口说明\n接口  | 项目 | 负责人 | 说明\n---|---|---|---\nregUser| 用户管理系统 | 张三| 注册用户\ngetUser| 用户管理系统 | 张三| 获取用户\ndeleteUser| 用户管理系统 | 张三 | 删除用户\naddUser| 用户管理系统 | 李四 | 添加用户\ngetToken| 用户管理系统 | 李四 | 获取用户token'),('userCenter-getUser','\n### 接口信息\n1. 项目：project1\n2. 负责人：张三\n\n### 接口说明\n> 提供用户信息对接公共服务入口\n\n### 接口地址\n> http://192.168.11.45:8769/\n\n### 数据格式\n> content-type: application/json;charset=UTF-8\n\n### 请求参数\n```java\nid=123456\n```\n1. id:用户ID\n\n### 响应状态码\n1. 200：正常\n2. 其它码：异常\n\n### 响应参数\n```json\n{\"id\":\"123456\",\"name\":\"userName\",\"age\":23,\"sex\":\"1\"}\n```\n1. id:用户ID\n2. name:用户名称\n3. age:用户年龄\n4. sex:用户性别，1男，2女\n\n### 备注\n1. 为保证接口稳定性，同一个接口相同请求源和相同参数限制请求次数，每1s最多10次；\n2. 请求时请添加token值到header头部，以做身份识别；\n'),('userCenter-regUser','');

/*Data for the table `balanced` */

insert  into `balanced`(`id`,`name`,`groupCode`,`loadUri`,`status`,`createTime`,`updateTime`,`remarks`) values ('bcd1ed61eaee40eda56f128372f3b683','获取用户','interior_api','userCenter/getUser','0','2021-05-12 20:39:36','2022-03-24 10:52:45',NULL);

/*Data for the table `client` */

insert  into `client`(`id`,`systemCode`,`name`,`groupCode`,`ip`,`status`,`createTime`,`updateTime`,`remarks`) values ('c7473ec4be7544fc95986ad070ab7c06','RiskManage','风控系统','interior_api','192.168.11.45','0','2020-12-30 16:21:41','2021-09-26 15:44:31','风险分析与风险实时监控系统。负责人：徐某');

/*Data for the table `groovyscript` */

insert  into `groovyscript`(`id`,`routeId`,`name`,`content`,`extendInfo`,`event`,`orderNum`,`status`,`remarks`,`createTime`,`updateTime`) values (1,'userCenter-feign','参数合法性较验','package com.flying.fish.gateway.component.groovy;\n\nimport com.flying.fish.formwork.base.BaseGroovyService;\nimport org.apache.commons.lang3.StringUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.http.HttpHeaders;\nimport org.springframework.http.server.reactive.ServerHttpRequest;\nimport org.springframework.web.server.ServerWebExchange;\n\nimport java.util.Map;\n\n/**\n * @Description\n * @Author JL\n * @Date 2022/2/21\n * @Version V1.0\n */\npublic class ParameterGroovyService extends BaseGroovyService {\n\n    private Logger log = LoggerFactory.getLogger(\"ParameterGroovyService\");\n\n    @Override\n    public void apply(ServerWebExchange exchange) throws Exception {\n        ServerHttpRequest request = exchange.getRequest();\n        HttpHeaders headers = exchange.getRequest().getHeaders();\n\n        //clientIp, routeId, ruleName, extednInfo从继承父类BaseGroovyService中获取\n        log.info(\"客户端IP【{}】访问网关路由【{}】执行GroovySrcipt规则引擎动态脚本组件名称【{}】,扩展参数【{}】\", clientIp, routeId, ruleName, extednInfo);\n\n        Map<String,String> valueMap = request.getQueryParams().toSingleValueMap();\n        String userId = valueMap.get(\"userId\");\n        if (StringUtils.isBlank(userId)){\n            throw new IllegalArgumentException(\"缺少userId参数\");\n        }\n        if (!userId.startsWith(\"100_\")){\n            throw new IllegalArgumentException(\"userId参数格式不对\");\n        }\n    }\n}\n','','request',2,'0',NULL,'2019-01-01 00:00:00','2022-03-17 11:18:30'),(2,'userCenter-feign','添加鉴权参数','package com.flying.fish.gateway.component.groovy;\n\nimport com.alibaba.fastjson.JSONObject;\nimport com.alibaba.nacos.common.util.Md5Utils;\nimport com.flying.fish.formwork.base.BaseGroovyService;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.http.HttpHeaders;\nimport org.springframework.http.server.reactive.ServerHttpRequest;\nimport org.springframework.web.server.ServerWebExchange;\n\nimport java.nio.charset.StandardCharsets;\n\n/**\n * @Description 为请求生成签名，并添加sign鉴权字段\n * @Author JL\n * @Date 2022/2/21\n * @Version V1.0\n */\npublic class RequestSignGroovyService extends BaseGroovyService {\n\n    private Logger log = LoggerFactory.getLogger(\"RequestSignGroovyService\");\n\n    @Override\n    public void apply(ServerWebExchange exchange) throws Exception {\n        ServerHttpRequest request = exchange.getRequest();\n        HttpHeaders headers = exchange.getRequest().getHeaders();\n        //clientIp, routeId, ruleName, extednInfo从继承父类BaseGroovyService中获取\n        log.info(\"客户端IP【{}】访问网关路由【{}】执行GroovySrcipt规则引擎动态脚本组件名称【{}】,扩展参数【{}】\", clientIp, routeId, ruleName, extednInfo);\n\n        String userId = paramMap.get(\"userId\");\n        JSONObject jsonObject = JSONObject.parseObject(extednInfo);\n        String secretKey = jsonObject.getString(\"secretKey\");\n        String sign = Md5Utils.getMD5(userId + System.currentTimeMillis() + secretKey, StandardCharsets.UTF_8.toString());\n        paramMap.put(\"sign\", sign);\n    }\n\n}','{\"secretKey\":\"60063b2a-299d-446b-a407-60cde897ad92\"}','request',3,'0','为请求生成签名，并添加sign鉴权字段','2019-01-01 00:00:00','2022-03-17 11:17:43'),(4,'userCenter-feign','UserId参数验证测试','package com.flying.fish.gateway.component.groovy;\n\nimport com.flying.fish.formwork.base.BaseGroovyService;\nimport org.apache.commons.lang3.StringUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.http.HttpHeaders;\nimport org.springframework.http.server.reactive.ServerHttpRequest;\nimport org.springframework.web.server.ServerWebExchange;\n\nimport java.util.Map;\n\n/**\n * @Description\n * @Author JL\n * @Date 2022/2/21\n * @Version V1.0\n */\npublic class ParameterGroovyService extends BaseGroovyService {\n\n    private Logger log = LoggerFactory.getLogger(\"ParameterGroovyService\");\n\n    @Override\n    public void apply(ServerWebExchange exchange) throws Exception {\n        ServerHttpRequest request = exchange.getRequest();\n        HttpHeaders headers = exchange.getRequest().getHeaders();\n\n        //clientIp, routeId, ruleName, extednInfo从继承父类BaseGroovyService中获取\n        log.info(\"客户端IP【{}】访问网关路由【{}】执行GroovySrcipt规则引擎动态脚本组件名称【{}】,扩展参数【{}】\", clientIp, routeId, ruleName, extednInfo);\n\n        Map<String,String> valueMap = request.getQueryParams().toSingleValueMap();\n        String userId = valueMap.get(\"userId\");\n        if (StringUtils.isBlank(userId)){\n            throw new IllegalArgumentException(\"缺少userId参数\");\n        }\n        if (!userId.startsWith(\"100_\")){\n            throw new IllegalArgumentException(\"userId参数格式不对\");\n        }\n    }\n}\n','','request',1,'1',NULL,'2022-02-23 17:57:17','2022-03-17 11:17:27'),(5,'userCenter-feign','响应结果格式化','package com.flying.fish.gateway.component.groovy;\n\nimport com.alibaba.fastjson.JSONObject;\nimport com.flying.fish.formwork.base.BaseGroovyService;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.http.HttpHeaders;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.MediaType;\nimport org.springframework.http.server.reactive.ServerHttpRequest;\nimport org.springframework.http.server.reactive.ServerHttpResponse;\nimport org.springframework.web.server.ServerWebExchange;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\n/**\n * @Description\n * @Author JL\n * @Date 2022/3/7\n * @Version V1.0\n */\npublic class FormatGroovyService  extends BaseGroovyService {\n\n    private Logger log = LoggerFactory.getLogger(\"FormatGroovyService\");\n\n    @Override\n    public void apply(ServerWebExchange exchange) throws Exception {\n        ServerHttpRequest request = exchange.getRequest();\n        ServerHttpResponse response = exchange.getResponse();\n        HttpHeaders headers = exchange.getRequest().getHeaders();\n        HttpStatus httpStatus = response.getStatusCode();\n        MediaType mediaType = headers.getContentType();\n\n        //clientIp, routeId, ruleName, extednInfo从继承父类BaseGroovyService中获取\n        log.info(\"客户端IP【{}】访问网关路由【{}】执行GroovySrcipt规则引擎动态脚本组件名称【{}】,扩展参数【{}】\", clientIp, routeId, ruleName, extednInfo);\n\n        if (mediaType != MediaType.APPLICATION_JSON){\n            System.out.println(body);\n            Map<String, String> dataMap = new HashMap<>();\n            dataMap.put(\"code\", \"0\");\n            dataMap.put(\"data\", body);\n            setBody(JSONObject.toJSONString(dataMap));\n        }\n    }\n}\n\n','','response',1,'0','返回的数据结果格式化','2022-03-08 17:27:39','2022-03-17 11:18:16');

/*Data for the table `loadserver` */

insert  into `loadserver`(`id`,`routeId`,`balancedId`,`weight`,`createTime`,`updateTime`,`remarks`) values (1,'userCenter-getUser','bcd1ed61eaee40eda56f128372f3b683',100,'2021-05-12 20:39:36',NULL,NULL),(2,'EXAMPLES-getUser','bcd1ed61eaee40eda56f128372f3b683',50,'2021-10-13 20:17:25',NULL,NULL);

/*Data for the table `monitor` */

insert  into `monitor`(`id`,`status`,`emails`,`topic`,`recover`,`frequency`,`alarmTime`,`sendTime`,`updateTime`) values ('userCenter-getToken','2','jianglong@4366.com','网关服务发生告警，请及时处理','0','30m','2022-03-24 10:50:03','2022-03-24 10:46:01','2021-09-27 14:57:38'),('userCenter-getUser','1','jianglong@4366.com','监控告警','1','12h','2021-05-12 19:45:38','2021-05-12 19:45:04','2021-09-30 15:13:42'),('userCenter-regUser','0','','','0','1h',NULL,NULL,'2021-09-26 20:18:01');

/*Data for the table `regserver` */

insert  into `regserver`(`id`,`clientId`,`routeId`,`token`,`secretKey`,`tokenEffectiveTime`,`status`,`createTime`,`updateTime`) values (1,'c7473ec4be7544fc95986ad070ab7c06','userCenter-getUser','eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyQ2VudGVyLWdldFVzZXIsYzc0NzNlYzRiZTc1NDRmYzk1OTg2YWQwNzBhYjdjMDYsMTYzMjk4NjU1MDExNSIsImlzcyI6InByby1zZXJ2ZXIiLCJleHAiOjE2MzI3NTg0MDB9.1XR8M1UqfqXZpasIKJAlkzhZSkeN8WoKkDUnIGiuPFU','c7473ec4be7544fc95986ad070ab7c06','2021-09-28 00:00:00','0','2020-12-30 16:22:24','2021-09-30 15:04:51');

/*Data for the table `route` */

insert  into `route`(`id`,`systemCode`,`name`,`groupCode`,`uri`,`path`,`method`,`host`,`remoteAddr`,`header`,`filterGatewaName`,`filterHystrixName`,`filterRateLimiterName`,`filterAuthorizeName`,`fallbackMsg`,`fallbackTimeout`,`replenishRate`,`burstCapacity`,`weight`,`status`,`stripPrefix`,`requestParameter`,`rewritePath`,`accessHeader`,`accessIp`,`accessParameter`,`accessTime`,`accessCookie`,`createTime`,`updateTime`) values ('EXAMPLES-getUser','CRM','用户管理服务-获取用户','interior_api','lb://provider-examples','/proxy/userCenter/getUser','','','','','',NULL,NULL,'','',0,20,100,NULL,'0',1,'','','','','','','','2021-10-13 19:53:50','2021-10-13 20:14:52'),('userCenter-addUser','CRM','用户管理系统-添加用户','interior_api','http://192.168.11.45:8769','/route/userCenter/addUser','POST',NULL,NULL,NULL,'',NULL,NULL,'','',0,20,100,NULL,'1',1,'',NULL,'','','','','','2020-12-30 15:37:00','2021-09-26 20:11:14'),('userCenter-delUser','CRM','用户管理系统-删除用户','interior_api','http://192.168.11.45:8769','/route/userCenter/delUser','GET',NULL,NULL,NULL,'',NULL,NULL,'','',0,20,100,NULL,'1',1,'',NULL,'','','','','','2020-12-30 15:35:22','2021-09-26 20:15:57'),('userCenter-feign','CRM','用户管理系统-Feign获取用户信息','interior_api','lb://consumer-examples','/route/userCenter/feign/getUser','GET','','','','','custom',NULL,'','',5000,20,100,NULL,'0',1,'version,snapshot-nacos.v.3.1','','','','','','','2021-02-01 17:33:38','2021-10-13 20:15:06'),('userCenter-getToken','CRM','用户管理系统-获取Token','interior_api','http://192.168.11.45:8769','/route/userCenter/getToken','','127.0.0.1:8771','127.0.0.1','X-Request-Id,userCenter-getToken','',NULL,NULL,'','',0,20,100,NULL,'0',1,'version,snapshot-nacos.v.3.1','/userCenter(?<segment>.*),/producer$\\{segment}','','','','','','2020-12-30 15:40:11','2021-09-27 14:57:38'),('userCenter-getUser','CRM','用户管理系统-获取用户','interior_api','http://192.168.11.45:8769','/route/userCenter/getUser','',NULL,NULL,NULL,'id,ip,token',NULL,NULL,'','',0,10,10,NULL,'0',1,'',NULL,'','','','','','2020-12-30 15:34:25','2021-09-30 15:13:42'),('userCenter-regUser','CRM','用户管理系统-注册用户','interior_api','http://192.168.11.45:8769','/route/userCenter/regUser','POST',NULL,NULL,NULL,'',NULL,NULL,'','',0,20,100,NULL,'1',1,'',NULL,'','','','','','2020-12-30 15:33:01','2021-09-26 20:18:01');

/*Data for the table `secureip` */

insert  into `secureip`(`ip`,`status`,`createTime`,`updateTime`,`remarks`) values ('192.168.11.45','0','2020-12-30 16:39:39','2020-12-30 16:50:25','非法IP');

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
